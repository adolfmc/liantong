package com.baidu.cloud.frameprocessor.gles;

import com.baidu.cloud.frameprocessor.gles.Texture2dProgram;

/* JADX WARN: Classes with same name are omitted:
  E:\10201592_dexfile_execute.dex.fixout.dex
 */
/* loaded from: E:\10201592_dexfile_execute.dex */
public class RGB2YUVProgram extends Texture2dProgram {
    public static final String FRAGMENT_SHADER_BGR2NV21 = "precision mediump float;\nvarying vec2 vTextureCoord;\nuniform sampler2D sTexture;\nuniform float inputImageWidth;\nuniform int onlyYColor;\nuniform int isMirrored;const mediump vec3 ycoeff = vec3( 0.257,  0.504,  0.098);\nconst mediump vec3 ucoeff = vec3(-0.148, -0.291,  0.439);\nconst mediump vec3 vcoeff = vec3( 0.439, -0.368, -0.071);\nvoid main() {\n   float widthOfPixel = 1.0 / inputImageWidth;\n   widthOfPixel = isMirrored == 1 ? -widthOfPixel : widthOfPixel;\n   vec2 coords1 = vec2(max(0.0, vTextureCoord.x - 1.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords2 = vec2(max(0.0, vTextureCoord.x - 0.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords3 = vec2(min(1.0, vTextureCoord.x + 0.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords4 = vec2(min(1.0, vTextureCoord.x + 1.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords5 = vec2(max(0.0, vTextureCoord.x - 1.0*widthOfPixel), vTextureCoord.y);\n   vec2 coords6 = vec2(min(1.0, vTextureCoord.x + 1.0*widthOfPixel), vTextureCoord.y);\n\n   float flag = onlyYColor == 1 ? 1.0 : 0.0;\n   gl_FragColor.r = (dot(texture2D(sTexture, coords5).rgb, vcoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords1).rgb, ycoeff) + 0.0625) * flag;\n   gl_FragColor.g = (dot(texture2D(sTexture, coords5).rgb, ucoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords2).rgb, ycoeff) + 0.0625) * flag;\n   gl_FragColor.b = (dot(texture2D(sTexture, coords6).rgb, vcoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords3).rgb, ycoeff) + 0.0625) * flag;\n   gl_FragColor.a = (dot(texture2D(sTexture, coords6).rgb, ucoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords4).rgb, ycoeff) + 0.0625) * flag;\n}\n";
    public static final String FRAGMENT_SHADER_NV212RGBA = "precision mediump float;\nvarying vec2 vTextureCoord;\nuniform float nv21Weight;\nuniform sampler2D sTexture;\nuniform sampler2D y_texture;\nuniform sampler2D uv_texture;\nvoid main() {\n   float r, g, b, y, u, v;\n   y = texture2D(y_texture, vTextureCoord).r - 0.0625;\n   u = texture2D(uv_texture, vTextureCoord).a - 0.5;\n   v = texture2D(uv_texture, vTextureCoord).r - 0.5;\n   r = 1.164*y + 1.596*v;\n   g = 1.164*y - 0.392*u - 0.813*v;\n   b = 1.164*y + 2.017*u;\n   vec4 textureColor = texture2D(sTexture, vTextureCoord);\n   gl_FragColor =  textureColor * nv21Weight + vec4(r, g, b, 1.0);\n}\n";

    public RGB2YUVProgram(Texture2dProgram.ProgramType programType) {
        super(programType);
        switch (programType) {
            case RGB2NV21:
                this.mTextureTarget = 3553;
                this.mProgramHandle = GlUtil.createProgram("uniform mat4 uMVPMatrix;\nuniform mat4 uTexMatrix;\nattribute vec4 aPosition;\nattribute vec4 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n    gl_Position = uMVPMatrix * aPosition;\n    vTextureCoord = (uTexMatrix * aTextureCoord).xy;\n}\n", "precision mediump float;\nvarying vec2 vTextureCoord;\nuniform sampler2D sTexture;\nuniform float inputImageWidth;\nuniform int onlyYColor;\nuniform int isMirrored;const mediump vec3 ycoeff = vec3( 0.257,  0.504,  0.098);\nconst mediump vec3 ucoeff = vec3(-0.148, -0.291,  0.439);\nconst mediump vec3 vcoeff = vec3( 0.439, -0.368, -0.071);\nvoid main() {\n   float widthOfPixel = 1.0 / inputImageWidth;\n   widthOfPixel = isMirrored == 1 ? -widthOfPixel : widthOfPixel;\n   vec2 coords1 = vec2(max(0.0, vTextureCoord.x - 1.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords2 = vec2(max(0.0, vTextureCoord.x - 0.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords3 = vec2(min(1.0, vTextureCoord.x + 0.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords4 = vec2(min(1.0, vTextureCoord.x + 1.5*widthOfPixel), vTextureCoord.y);\n   vec2 coords5 = vec2(max(0.0, vTextureCoord.x - 1.0*widthOfPixel), vTextureCoord.y);\n   vec2 coords6 = vec2(min(1.0, vTextureCoord.x + 1.0*widthOfPixel), vTextureCoord.y);\n\n   float flag = onlyYColor == 1 ? 1.0 : 0.0;\n   gl_FragColor.r = (dot(texture2D(sTexture, coords5).rgb, vcoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords1).rgb, ycoeff) + 0.0625) * flag;\n   gl_FragColor.g = (dot(texture2D(sTexture, coords5).rgb, ucoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords2).rgb, ycoeff) + 0.0625) * flag;\n   gl_FragColor.b = (dot(texture2D(sTexture, coords6).rgb, vcoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords3).rgb, ycoeff) + 0.0625) * flag;\n   gl_FragColor.a = (dot(texture2D(sTexture, coords6).rgb, ucoeff) + 0.5) * (1.0 - flag) + (dot(texture2D(sTexture, coords4).rgb, ycoeff) + 0.0625) * flag;\n}\n");
                break;
            case NV212RGB:
                this.mTextureTarget = 3553;
                this.mProgramHandle = GlUtil.createProgram("uniform mat4 uMVPMatrix;\nuniform mat4 uTexMatrix;\nattribute vec4 aPosition;\nattribute vec4 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n    gl_Position = uMVPMatrix * aPosition;\n    vTextureCoord = (uTexMatrix * aTextureCoord).xy;\n}\n", "precision mediump float;\nvarying vec2 vTextureCoord;\nuniform float nv21Weight;\nuniform sampler2D sTexture;\nuniform sampler2D y_texture;\nuniform sampler2D uv_texture;\nvoid main() {\n   float r, g, b, y, u, v;\n   y = texture2D(y_texture, vTextureCoord).r - 0.0625;\n   u = texture2D(uv_texture, vTextureCoord).a - 0.5;\n   v = texture2D(uv_texture, vTextureCoord).r - 0.5;\n   r = 1.164*y + 1.596*v;\n   g = 1.164*y - 0.392*u - 0.813*v;\n   b = 1.164*y + 2.017*u;\n   vec4 textureColor = texture2D(sTexture, vTextureCoord);\n   gl_FragColor =  textureColor * nv21Weight + vec4(r, g, b, 1.0);\n}\n");
                break;
        }
        init();
    }
}
